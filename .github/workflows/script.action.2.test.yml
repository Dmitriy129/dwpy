name: scr 2 test 
on:
  schedule:
    - cron: '*/5 * * * *'
  workflow_dispatch:
    inputs:
      COURSE_ID:
        required: true 
        type: string
      CM_ID:
        required: true 
        type: string
      GITHUB_PR_REGEX:
        required: true 
        type: string
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: cron 1
        if: github.event.schedule == '*/2 * * * *'
        run: echo "COURSE_ID=47 CM_ID=1553 GITHUB_PR_REGEX='^(\\w*)_(lr1)$'" >> "$GITHUB_ENV"

      - name: check GITHUB_ENV
        run: echo "GITHUB_ENV ${{$GITHUB_ENV}}"

      - name: check env
        run: echo "env ${{env}}"

      - 
        name: Check out code
        uses: actions/checkout@v2
      - 
        name: Build docker images
        run: docker build -t scripts .
      - 
        name: Run script
        run: docker run -e COURSE_ID=${{$COURSE_ID}} -e CM_ID=${{$CM_ID}} -e GITHUB_REPO="${{ github.repository }}" -e GITHUB_PR_REGEX=${{$GITHUB_PR_REGEX}} -e GITHUB_ACCESS_TOKEN="${{ github.token }}" -e MOODLE_ACCESS_TOKEN="${{ secrets.MOODLE_ACCESS_TOKEN }}" scripts python main.py script2 mock 1
        # run: docker run -e COURSE_ID="${{env.COURSE_ID}}" -e CM_ID="${{env.CM_ID}}" -e GITHUB_REPO="${{ github.repository }}" -e GITHUB_PR_REGEX="${{env.GITHUB_PR_REGEX}}" -e GITHUB_ACCESS_TOKEN="${{ github.token }}" -e MOODLE_ACCESS_TOKEN="${{ secrets.MOODLE_ACCESS_TOKEN }}" scripts python main.py script2 mock 1

      - run: echo "üçè This job's status is ${{ job.status }}."